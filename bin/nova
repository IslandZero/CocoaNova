#!/usr/bin/env ruby

require 'yaml'
require 'cocoanova'

config = { 'src_root'=> Dir.pwd }

# Load novarc
if File.exists? './.novarc'
    config.merge! YAML.load_file './.novarc'
end

# Generate config
# Resolve src_root from relative
config['src_root']  = File.expand_path(config['src_root'], Dir.pwd)
# Set local_root if not exists
config['local_root'] ||= File.expand_path('./nova', config['src_root'])
# Resolve local_root from relative
config['local_root']  = File.expand_path(config['local_root'], Dir.pwd)

# Require plugins
Array.wrap(config['plugins']).each do |plugin|
    require plugin
end

# Set project root to ./
Nova.src_root = config['src_root']
# Set local nova root to ./nova
Nova.local_root= config['local_root']

# Load Tasks
Nova::Task.require_all

# Execute task or print tasks
if ARGV.first.nil?
    puts "Nova Xcode Project Pre-build System"
    Nova::Task::Tasks.each_pair do |key, value|
        puts "Task: #{key}"
        Array.wrap(value).each do |task|
            puts "  -#{task}"
        end
        puts ""
    end
else
    puts "======== Task: #{ARGV.first} =========="
    Nova::Task.invoke(ARGV.first)
end
